{"version":3,"sources":["movies.tsx","App.tsx","index.tsx"],"names":["Movie","props","className","src","medium_cover_image","alt","title","year","genres","map","everygenres","index","key","summary","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","everyMovie","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8TAyCeA,MA7Bf,SAAeC,GACb,OACE,yBAAKC,UAAU,SACb,yBACEC,IAAKF,EAAMG,mBACXC,IAAKJ,EAAMK,MACXA,MAAOL,EAAMK,QAGf,yBAAKJ,UAAU,cACb,wBAAIA,UAAU,eAAeD,EAAMK,OACnC,wBAAIJ,UAAU,cAAcD,EAAMM,MAClC,wBAAIL,UAAU,UACXD,EAAMO,OAAOC,KAAI,SAChBC,EACAC,GAFgB,OAKhB,wBAAIC,IAAKD,EAAOT,UAAU,gBACvBQ,OAIP,wBAAIR,UAAU,iBAAiBD,EAAMY,QAAQC,MAAM,EAAG,KAAtD,UCoCOC,G,iNAxDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EASVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,IAAI,EAAKV,MAAME,QATb,2C,mFAYVS,KAAKR,c,+BAGG,IAAD,EACuBQ,KAAKX,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAenB,OACE,6BAAShB,UAAU,aAChBe,EACC,yBAAKf,UAAU,UACb,0BAAMA,UAAU,eAAhB,mBAGF,yBAAKA,UAAU,UAAUgB,EAAOT,KArBtC,SAAiBmB,GAEf,OADAH,QAAQC,IAAIE,GAEV,kBAAC,EAAD,CACEhB,IAAKgB,EAAWC,GAChBA,GAAID,EAAWC,GACftB,KAAMqB,EAAWrB,KACjBD,MAAOsB,EAAWtB,MAClBO,QAASe,EAAWf,QACpBT,mBAAoBwB,EAAWxB,mBAC/BI,OAAQoB,EAAWpB,kB,GAvCXsB,IAAMC,YCVxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.ccfc8dd7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Movie.css\";\r\n\r\ninterface Movietype {\r\n  id: number;\r\n  year: number;\r\n  title: string;\r\n  summary: string;\r\n  medium_cover_image: string;\r\n  genres: string[];\r\n}\r\n\r\nfunction Movie(props: Movietype) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img\r\n        src={props.medium_cover_image}\r\n        alt={props.title}\r\n        title={props.title}\r\n      />\r\n\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{props.title}</h3>\r\n        <h3 className=\"movie_year\">{props.year}</h3>\r\n        <ul className=\"genres\">\r\n          {props.genres.map((\r\n            everygenres,\r\n            index\r\n            // remember : .map() provides the every elements with the basic index inherent\r\n          ) => (\r\n            <li key={index} className=\"genres_genre\">\r\n              {everygenres}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h3 className=\"movie_summary\">{props.summary.slice(0, 180)}...</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./movies\";\nimport \"./App.css\";\n\ninterface Movietypes {\n  id: number;\n  year: number;\n  title: string;\n  summary: string;\n  medium_cover_image: string;\n  genres: string[];\n}\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  //laoding some files from other websites can be retarded in some conditions\n  //to ensure that I hope to call getMovies first, I set \"async\"\n  // and \"await\" allows me to target what order I want to make javascript wait for\n  //inside axios.get(\"https://yts-proxy.now.sh/list_movies.json) , there are a lot of properties but What I want to focus more on is movies\n  //the path of this is {data:{data:{movies}}}\n  //inside movies = [{...},{...},{...}.........]\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false }); // put \"movies\" array into the default state object\n    console.log(this.state.movies);\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    function putting(everyMovie: Movietypes) {\n      console.log(everyMovie);\n      return (\n        <Movie\n          key={everyMovie.id}\n          id={everyMovie.id}\n          year={everyMovie.year}\n          title={everyMovie.title}\n          summary={everyMovie.summary}\n          medium_cover_image={everyMovie.medium_cover_image}\n          genres={everyMovie.genres}\n        />\n      );\n    }\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Now Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">{movies.map(putting)}</div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"potato\"));\n// <App /> that kind of things are called \"component\" which allows me to run a fucntion which acts to return and add them to the public Index html.\n"],"sourceRoot":""}